{"version":3,"sources":["Components/filter/filter-styles.module.css","Components/form/form-styles.module.css","redux/contacts-actions.js","redux/contacts-operations.js","Components/form/Form.js","redux/contacts-selectors.js","Components/filter/Filter.js","Components/contacts-list/ContactList.js","App.js","reportWebVitals.js","redux/reducers.js","redux/store.js","index.js","Components/contacts-list/contactsList-styles.module.css"],"names":["module","exports","featchContactRequest","createAction","featchContactSuccess","featchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","connect","dispatch","toAddContact","data","name","number","contact","post","then","catch","error","contactsOperations","useState","setName","setNumber","onSubmit","event","preventDefault","id","shortid","generate","className","s","form","label","input","type","pattern","title","required","value","onChange","target","btn","getLoading","state","contacts","loading","getFilter","console","log","filter","getVisibleContacts","createSelector","items","normalizedFilter","toLowerCase","includes","filterValue","toFilter","div","onDeleteContact","contactId","delete","list","map","item","p","span","onClick","App","this","props","fetchContacts","isLoadingcontacts","Component","get","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createReducer","payload","action","undefined","find","alert","contactsReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.910bb09a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"div\":\"filter-styles_div__2F80q\",\"input\":\"filter-styles_input__1kNIe\",\"label\":\"filter-styles_label__26V17\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"form-styles_label__2_HGl\",\"input\":\"form-styles_input__1gS2W\",\"form\":\"form-styles_form__29POf\",\"btn\":\"form-styles_btn__13NKp\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const featchContactRequest = createAction(\r\n  'contacts/featchContactRequest',\r\n);\r\nexport const featchContactSuccess = createAction(\r\n  'contacts/featchContactSuccess',\r\n);\r\nexport const featchContactError = createAction('contacts/featchContactError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n","import axios from 'axios';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  featchContactRequest,\r\n  featchContactSuccess,\r\n  featchContactError,\r\n} from './contacts-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:3000';\r\n\r\nconst fetchContacts = () => dispatch => {\r\n  dispatch(featchContactRequest());\r\n\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(featchContactSuccess(data)))\r\n    .catch(error => dispatch(featchContactError(error)));\r\n};\r\n\r\nconst addContact =\r\n  ({ name, number }) =>\r\n  dispatch => {\r\n    const contact = {\r\n      name,\r\n      number,\r\n    };\r\n\r\n    dispatch(addContactRequest());\r\n\r\n    axios\r\n      .post('/contacts', contact)\r\n      .then(({ data }) => dispatch(addContactSuccess(data)))\r\n      .catch(error => dispatch(addContactError(error)));\r\n  };\r\n\r\nconst deleteContact = contactId => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(deleteContactSuccess(contactId)))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n};\r\n\r\nexport { addContact, deleteContact, fetchContacts };\r\n","import { useState } from 'react';\r\nimport shortid from 'shortid';\r\nimport PropTypes from 'prop-types';\r\nimport s from './form-styles.module.css';\r\nimport { connect } from 'react-redux';\r\nimport * as contactsOperations from '../../redux/contacts-operations';\r\n\r\nfunction Form({ toAddContact }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const changeName = event => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const changeNumber = event => {\r\n    setNumber(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    const data = { name: name, number: number, id: shortid.generate() };\r\n    toAddContact(data);\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.form}>\r\n      <label className={s.label}>Name</label>\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        value={name}\r\n        onChange={changeName}\r\n      />\r\n      <label className={s.label}>Number</label>\r\n      <input\r\n        className={s.input}\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        required\r\n        value={number}\r\n        onChange={changeNumber}\r\n      />\r\n      <button type=\"submit\" className={s.btn}>\r\n        Add to contacts\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    toAddContact: data => dispatch(contactsOperations.addContact(data)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Form);\r\n","import { createSelector } from '@reduxjs/toolkit';\r\nconst getLoading = state => state.contacts.loading;\r\n\r\nconst getFilter = state => {\r\n  console.log('state.contacts', state);\r\n  return state.contacts.filter;\r\n};\r\n\r\nconst getAllContacts = state => {\r\n  console.log('im here');\r\n  return state.contacts.items;\r\n};\r\n\r\nconst getVisibleContacts = createSelector(\r\n  [getAllContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\n\r\nexport { getLoading, getFilter, getAllContacts, getVisibleContacts };\r\n","import PropTypes from 'prop-types';\r\nimport s from './filter-styles.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { getFilter } from '../../redux/contacts-selectors';\r\nimport { changeFilter } from '../../redux/contacts-actions';\r\n\r\nconst Filter = ({ filterValue, toFilter }) => {\r\n  return (\r\n    <div className={s.div}>\r\n      <label className={s.label}>Find contacts by name</label>\r\n      <input\r\n        onChange={toFilter}\r\n        value={filterValue}\r\n        className={s.input}\r\n      ></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    filterValue: getFilter(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    toFilter: event => dispatch(changeFilter(event.target.value)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import PropTypes from 'prop-types';\r\nimport s from './contactsList-styles.module.css';\r\nimport { connect } from 'react-redux';\r\nimport * as contactsOperations from '../../redux/contacts-operations';\r\nimport { getVisibleContacts } from '../../redux/contacts-selectors';\r\n\r\nfunction ContactList({ contacts, onDeleteContact }) {\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(contact => {\r\n        const { name, number, id } = contact;\r\n        return (\r\n          <li key={id} className={s.item}>\r\n            <p className={s.p}>\r\n              {name} <span className={s.span}>{number}</span>\r\n            </p>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                onDeleteContact(id);\r\n              }}\r\n              className={s.btn}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n  onDelete: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: getVisibleContacts(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onDeleteContact: id => dispatch(contactsOperations.deleteContact(id)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import './App.css';\nimport Form from './Components/form/Form';\nimport Filter from './Components/filter/Filter';\nimport ContactList from './Components/contacts-list/ContactList';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getLoading } from './redux/contacts-selectors';\nimport { fetchContacts } from './redux/contacts-operations';\nimport { Component } from 'react';\n\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    return (\n      <div>\n        <Form />\n        <Filter />\n        {this.props.isLoadingcontacts && <h2>Loading...</h2>}\n        <ContactList />\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n\nconst mapStateToProps = state => ({\n  isLoadingcontacts: getLoading(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactError,\r\n  deleteContactSuccess,\r\n  changeFilter,\r\n  featchContactRequest,\r\n  featchContactSuccess,\r\n  featchContactError,\r\n} from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [featchContactSuccess]: (state, { payload }) => payload,\r\n  [addContactSuccess]: (state, action) => {\r\n    let similar = state.find(item => item.name === action.payload.name);\r\n\r\n    if (similar !== undefined) {\r\n      alert(`${action.payload.name} is already in contacts.`);\r\n      return state;\r\n    } else return [...state, action.payload];\r\n  },\r\n  [deleteContactSuccess]: (state, action) =>\r\n    state.filter(contact => contact.id !== action.payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [featchContactRequest]: () => true,\r\n  [featchContactSuccess]: () => false,\r\n  [featchContactError]: () => false,\r\n\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (state, action) => action.payload,\r\n});\r\n\r\nconst error = createReducer(null, {});\r\n\r\nconst contactsReducer = combineReducers({\r\n  items: items,\r\n  loading: loading,\r\n  filter: filter,\r\n  error: error,\r\n});\r\n\r\nexport default contactsReducer;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\n// import logger from 'redux-logger';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport contactsReducer from './reducers';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  // logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"contactsList-styles_list__2XX-m\",\"item\":\"contactsList-styles_item__73kGi\",\"span\":\"contactsList-styles_span__3ggNO\",\"btn\":\"contactsList-styles_btn__1Mkso\",\"p\":\"contactsList-styles_p__10nQp\"};"],"sourceRoot":""}